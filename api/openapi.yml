openapi: 3.0.3
info:
  title: LBOS Controller API
  description: |
    API Контроллера Сервиса "Больше, чем Балансировка Нагрузки" типа Open Source.

    Иерархия сущностей следующая: `zone` => `cluster` => `service`
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 'v1.0.0'
tags:
  - name: services
    description: методы работы с Сервисами Балансировки
  - name: clusters
    description: методы работы с Кластерами Балансировки
  - name: zones
    description: методы работы с Зонами Безопасности
servers:
  - url: /api/v1
paths:
  /clusters:
    post:
      tags:
        - clusters
      summary: создать Кластер Балансировки
      operationId: clusterAdd
      requestBody:
        description: При передаче JSON объекта c `name` и `zoneId`, произойдёт создание новой записи в БД с автогенерацией `id`.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "201":
          description: ответ с результирующим объектом
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
        "303":
          $ref: "#/components/responses/AlreadyExist"
        "400":
          description: некорректный ввод
        "401":
          $ref: "#/components/responses/Unauthorized"
    get:
      tags:
        - clusters
      summary: получить список всех Кластеров Балансировки
      operationId: clusterGetAll
      responses:
        "200":
          description: массив объектов типа Кластер Балансировки
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cluster"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /clusters/{clusterId}:
    get:
      tags:
        - clusters
      summary: получить Кластер Балансировки
      operationId: clusterGetById
      parameters:
        - name: clusterId
          in: path
          description: ID Кластера Балансировки
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: объект типа Кластер Балансировки
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags:
        - clusters
      summary: обновить Кластер Балансировки
      operationId: clusterUpdate
      parameters:
        - name: clusterId
          in: path
          description: ID Кластера Балансировки
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "200":
          description: OK
          content: { }
        "400":
          description: некорректный ввод
          content: { }
    delete:
      tags:
        - clusters
      summary: удалить Кластер Балансировки
      operationId: clusterDelete
      parameters:
        - name: clusterId
          in: path
          description: ID Кластера Балансировки
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: контента нет
          content: { }
        "400":
          description: некорректный ввод
          content: { }

  /services:
    post:
      tags:
        - services
      summary: 'создать Сервис Балансировки'
      operationId: serviceAdd
      requestBody:
        description: |
          При создании Сервиса Балансировки, необходимо указывать `clusterId` существующего Кластера Баласировки.

          **IMPORTANT**: В текущей версии API дочерние сущности сервиса (`[]real` и `[]healthcheck`) создаются из общего JSON. Если будет допущена ошибка конфигурации в каком-либо месте, единственная возможность исправить ошибку - удалить некорректный Сервис Балансировки и создать его заново.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Service"
      responses:
        "400":
          description: некорректный ввод
        "401":
          $ref: "#/components/responses/Unauthorized"
    get:
      tags:
        - services
      summary: 'получить список всех Сервисов Балансировки'
      operationId: serviceGetAll
      responses:
        "200":
          description: массив объектов типа Сервисы Балансировки
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Service"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /services/{serviceId}:
    get:
      tags:
        - services
      summary: 'получить Сервис Блансировки'
      operationId: serviceGetById
      parameters:
        - name: serviceId
          in: path
          description: ''
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: объект типа Сервис Балансировки
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
        "401":
          $ref: "#/components/responses/Unauthorized"
    delete:
      tags:
        - services
      summary: 'удалить Сервис Балансировки'
      operationId: serviceDeleteById
      parameters:
        - name: serviceId
          in: path
          description: |
            **IMPORTANT**: Удаление Сервиса Балансировки удаляет также все связанные `[]real` и `[]healthcheck`
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: контента нет
          content: { }
        "400":
          description: некорректный ввод
          content: { }
        "401":
          $ref: "#/components/responses/Unauthorized"

  /zones:
    post:
      tags:
        - zones
      summary: создать Зону Безопасности
      operationId: zoneAdd
      requestBody:
        description: При передаче JSON объекта с `name`, произойдёт создание новой записи в БД с автогенерацией `id`.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Zone"
      responses:
        "201":
          description: ответ с результирующим объектом
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zone"
        "303":
          $ref: "#/components/responses/AlreadyExist"
        "400":
          description: некорректный ввод
        "401":
          $ref: "#/components/responses/Unauthorized"

    get:
      tags:
        - zones
      summary: получить список всех Зон Безопасности
      #      description: Запрос возвращает все созданные ранее Зоны Безопасности.
      operationId: zoneGetAll
      responses:
        "200":
          description: массив объектов типа Зона Безопасности
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Zone"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /zones/{zoneId}:
    get:
      tags:
        - zones
      summary: получить Зону Безопасности
      operationId: zoneGetById
      parameters:
        - name: zoneId
          in: path
          description: ID Зоны Безопасности
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: объект типа Зона Безопасности
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Zone"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags:
        - zones
      summary: обновить Зону Безопасности
      operationId: zoneUpdate
      parameters:
        - name: zoneId
          in: path
          description: ID Зоны Безопасности
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        #        description: При передаче объекта с `name`, произойдёт создание новой записи в БД с автогенерацией `id`.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Zone"
      responses:
        "200":
          description: OK
          content: { }
        "400":
          description: некорректный ввод
          content: { }

    delete:
      tags:
        - zones
      summary: удалить Зону Безопасности
      operationId: zoneDelete
      parameters:
        - name: zoneId
          in: path
          description: ID Зоны Безопасности
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: контента нет
          content: { }
        "400":
          description: некорректный ввод
          content: { }
        "401":
          $ref: "#/components/responses/Unauthorized"

components:
  schemas:
    Cluster:
      description: |
        Кластер Балансировки обозначает группу физических серверов либо виртуальных машин, обеспечивающих отказоустойчивость спланированных на такой Кластер Сервисов Балансировки.
      type: object
      required:
        - name
        - zoneId
        - capacity
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: уникальный ID Кластера Балансировки
        zoneId:
          type: string
          format: uuid
          description: ID Зоны Безопасности
        name:
          type: string
          description: имя Кластера Балансировки
        capacity:
          type: number
          description: предел утилизации Кластера Балансировки
        usage:
          type: number
          readOnly: true
          description: текущая утилизация (вычисляемое значение)

    Healthcheck:
      description: |
        Хелсчек -- описание механизма и параметров проверки для каждого сервера, куда производится балансировки Сервисом Балансировки
      type: object
      required:
        - helloTimer
        - responseTimer
        - aliveThreshold
        - deadThreshold
        - quorum
        - hysteresis
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        helloTimer:
          type: number
          description: таймер приветствия # FIXME: add details
        responseTimer:
          type: number
          description: таймер ответа # FIXME: add details
        aliveThreshold:
          type: number
          description: порог успешных последовательных проверок для включения в балансировку
        deadThreshold:
          type: number
          description: порог проваленных последовательно проверок для исключения из балансировки
        quorum:
          type: number
          description: кворум
        hysteresis:
          type: number
          description: гистере́зис

    Real:
      description: |
        Сервер, на который производится балансировка Сервисом Балансировки. Значения `addr` + `port` образуют уникальный кортеж и не могут повторяться.
      type: object
      required:
        - addr
        - port
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: уникальный ID сервера, куда производится балансировка
        addr:
          type: string
          format: ipv4
          description: ip адрес сервера, куда производится балансировка
        port:
          type: number
          description: порт сервера, куда производится балансировка

    Service:
      description: |
        Сервис Балансировки
      required:
        - clusterId
        - balancingType
        - routingType
        - bandwidth
        - proto
        - addr
        - port
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: уникальный ID Сервиса Балансировки
        clusterId:
          type: string
          format: uuid
          description: уникальный ID Кластера Балансировки, на котором планируется Сервис Балансировки
        balancingType:
          type: string
          enum: [ round-robin, source-ip, source-ip-port, least-connection, uri, url-param, hdr, random, rdp-cookie ]
          description: тип балансировки
        routingType:
          type: string
          enum: [ nat, tunnel, gre-tunnel ]
          description: тип маршрутизации
        bandwidth:
          type: number
          description: величина требуемого резерва полосы пропускания
        proto:
          type: string
          enum: [ tcp, udp ]
          description: протокол балансировки
        addr:
          type: string
          format: ipv4
          description: адрес Сервиса Балансировки aka `Virtual IP`/`VIP`
        port:
          type: number
          description: порт Сервиса Балансировки
        reals:
          type: array
          items:
            $ref: '#/components/schemas/Real'
          description: список адресов, на которые производится балансировка
        healthchecks:
          type: array
          items:
            $ref: '#/components/schemas/Healthcheck'
          description: список конфигураций хелсчека

    Zone:
      description: |
        Зона Безопасности
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          description: уникальный ID Зоны Безопасности
        name:
          type: string
          description: имя Зоны Безопасности

  responses:
    Unauthorized:
      description: ключ API отсутствует или неверный
      headers:
        LBOS_API_KEY:
          description: auth header
          schema:
            type: string
    AlreadyExist:
      description: объект уже существует
      headers:
        Location:
          description: redirect location
          example: asd
          schema:
            type: string

  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: LBOS_API_KEY

security:
  - api_key: [ ]
